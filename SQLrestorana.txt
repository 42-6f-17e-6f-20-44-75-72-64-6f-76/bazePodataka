/* 
   -------------------------------
       Stvaranje baze podataka
   -------------------------------
*/

CREATE DATABASE Restoran;

/* 
   -------------------------
       Stvaranje tablica
   -------------------------
*/

CREATE TABLE Jelo (
    id                  SERIAL PRIMARY KEY,
    naziv               CHARACTER VARYING(30) NOT NULL UNIQUE,
    cijena              REAL NOT NULL,
    CONSTRAINT POZITIVNA_VRIJEDNOST CHECK (cijena>0)
);



CREATE TABLE Racun (
    id                  SERIAL PRIMARY KEY,
    datum               TIMESTAMP NOT NULL DEFAULT now()
);

CREATE TABLE Namirnice (
    id                  SERIAL PRIMARY KEY,
    naziv               CHARACTER VARYING(30) NOT NULL UNIQUE,
    raspoloziva_kol     REAL,
    rok_trajanja        DATE,
    nabavna_cijena      REAL,
    CONSTRAINT POZITIVNA_VRIJEDNOST CHECK (raspoloziva_kol>0 AND nabavna_cijena>0),
    CONSTRAINT DATUM_NAKON CHECK (rok_trajanja>now())

);


CREATE TABLE DnevniMeni (
    id                  SERIAL PRIMARY KEY,
    datum               DATE NOT NULL UNIQUE,
    CONSTRAINT DATUM_NAKON CHECK (datum>now())
);

CREATE TABLE Meni (
    id                  SERIAL PRIMARY KEY,
    naziv               CHARACTER VARYING(30) NOT NULL UNIQUE
);


CREATE TABLE JeloRacun (
    id_jelo             BIGINT references Jelo(id),
    id_racun            BIGINT references Racun(id),
    kolicina            REAL NOT NULL DEFAULT 1,
    PRIMARY KEY         (id_jelo, id_racun),
    CONSTRAINT POZITIVNA_VRIJEDNOST CHECK (kolicina>0)
);


CREATE TABLE JeloNamirnice (
    id_jelo             BIGINT references Jelo(id),
    id_namirnice        BIGINT references Namirnice(id),
    kolicina            REAL NOT NULL DEFAULT 1,
    PRIMARY KEY         (id_jelo, id_namirnice),
    CONSTRAINT POZITIVNA_VRIJEDNOST CHECK (kolicina>0)
);

CREATE TABLE JeloDnevniMeni (
    id_jelo             BIGINT references Jelo(id),
    id_dnevnimeni       BIGINT references DnevniMeni(id),
    broj_porcija        INTEGER NOT NULL DEFAULT 1,
    PRIMARY KEY         (id_jelo, id_dnevnimeni),
    CONSTRAINT POZITIVNA_VRIJEDNOST CHECK (broj_porcija>0)
);

CREATE TABLE JeloMeni (
    id_jelo             BIGINT references Jelo(id),
    id_meni             BIGINT references Meni(id),
    PRIMARY KEY         (id_jelo, id_meni)
);



/*PUNJENJE PODACIMA*/

/* npr. pizza povezivanje svih namirnica i jela */

INSERT INTO namirnice(naziv,raspoloziva_kol,rok_trajanja,nabavna_cijena)
VALUES 

('Sol', 2, '2022-01-03'::date, 15),
('Brasno', 8, '2021-10-03'::date, 10),
('Secer', 1, '2021-11-20'::date, 20),
('Sunka', 2, '2021-07-03'::date, 30),
('Sir', 2, '2021-07-03'::date, 20),
('Origano', 0.1, '2022-08-03'::date, 30),
('Maslinovo ulje', 1, '2023-08-03'::date, 80),

('Limun', 0.5, '2021-06-15'::date, 13),
('Krompir', 10, '2021-07-15'::date, 11),
('Luk', 0.5, '2021-07-15'::date, 10),
('Kapula', 0.8, '2022-01-03'::date, 15);


INSERT INTO jelo(naziv,cijena)
VALUES 
('Mjesana Pizza', 60),
('Margarita Pizza', 60),
('Kolac', 20),
('Peceno', 180),
('Palacinke', 25);


INSERT INTO jelonamirnice(id_jelo,id_namirnice,kolicina)
VALUES 
(1, 1, 30),
(1, 2, 20),
(1, 3, 30),
(1, 4, 30),
(1, 5, 20),
(1, 6, 30),
(1, 7, 80),

(2, 1, 30),
(2, 2, 20),
(2, 3, 30),
(2, 5, 20),
(2, 6, 30),
(2, 7, 80);


INSERT INTO meni(naziv)
VALUES 
('Juhe'),
('Deserti'),
('Meso'),
('Salate');



INSERT INTO dnevnimeni(datum)
VALUES 
('2021-10-01'::date),
('2021-10-02'::date),
('2021-10-03'::date),
('2021-10-04'::date),
('2021-10-05'::date),
('2021-10-06'::date),
('2021-10-07'::date),
('2021-10-08'::date),
('2021-10-09'::date),
('2021-10-10'::date);


/*ispisi sve namirnice potrebne za pojedino jelo*/

SELECT namirnice.naziv, namirnice.raspoloziva_kol FROM jelo
JOIN jelonamirnice ON jelo.id = jelonamirnice.id_jelo
JOIN namirnice ON namirnice.id = jelonamirnice.id_namirnice
WHERE jelo.naziv = 'Pizza';


/*popis svih namirnica kojih nema u dovoljnim količinama za pripravu određenog jela*/

SELECT namirnice.naziv, namirnice.raspoloziva_kol,jelonamirnice.kolicina AS potrebna_kolicina,
(jelonamirnice.kolicina-namirnice.raspoloziva_kol) AS nedostaje
FROM jelo
JOIN jelonamirnice ON jelo.id = jelonamirnice.id_jelo
JOIN namirnice ON namirnice.id = jelonamirnice.id_namirnice
WHERE namirnice.raspoloziva_kol < jelonamirnice.kolicina AND jelo.naziv='Pizza';


/*popis svih jela koja se mogu pripraviti od raspoloživih namirnica*/
SELECT DISTINCT jelo.naziv 
FROM jelo 
JOIN jelonamirnice ON jelo.id = jelonamirnice.id_jelo
JOIN namirnice ON namirnice.id = jelonamirnice.id_namirnice
WHERE  (jelo.naziv) <>  ALL (
	SELECT DISTINCT jelo.naziv 
	FROM jelo
	JOIN jelonamirnice ON jelo.id = jelonamirnice.id_jelo
	JOIN namirnice ON namirnice.id = jelonamirnice.id_namirnice
	WHERE jelonamirnice.kolicina > namirnice.raspoloziva_kol 
);


/*dodaj racun pomocu samo naziva jela i kolicina*/
with rows as (
INSERT INTO racun DEFAULT VALUES RETURNING id
)
INSERT INTO jeloracun(id_jelo,id_racun,kolicina) 
VALUES
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Mjesana Pizza'),(SELECT id FROM rows),1),
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Margarita Pizza'),(SELECT id FROM rows),3),
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Peceno'),(SELECT id FROM rows),4),
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Palacinke'),(SELECT id FROM rows),2);

/*dodaj dnevni meni pomocu samo naziva jela i broja porcija*/
BEGIN; 
with rows as (
INSERT INTO dnevnimeni(datum) VALUES ('2021-11-01'::date) RETURNING id
)
INSERT INTO jelodnevnimeni(id_jelo,id_dnevnimeni,broj_porcija) 
VALUES
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Mjesana Pizza'),(SELECT id FROM rows),10),
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Margarita Pizza'),(SELECT id FROM rows),10),
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Peceno'),(SELECT id FROM rows),10),
((SELECT jelo.id FROM jelo WHERE jelo.naziv='Palacinke'),(SELECT id FROM rows),10);
COMMIT; 



/*Vlasnica/vlasnik restorana salona želi imati uvid samo u pregled prometa po danima*/
CREATE VIEW DnevniPromet AS
SELECT SUM(jelo.cijena * jeloracun.kolicina) AS promet, 
make_date(date_part('year', racun.datum)::int, date_part('month', racun.datum)::int, date_part('day', racun.datum)::int)
AS datum
FROM racun
JOIN jeloracun ON racun.id = jeloracun.id_racun
JOIN jelo ON jeloracun.id_jelo = jelo.id
GROUP BY date_part('day', racun.datum), date_part('month', racun.datum), date_part('year', racun.datum);
